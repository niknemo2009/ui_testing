# This is a basic workflow that is manually triggered

name: Manual workflow

on:
  push:
    branches: [master]

jobs:
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
          # Downloads a copy of the code in your repository before running CI tests
          - name: Check out repository code
            uses: actions/checkout@v4

          # Performs a clean installation of all dependencies in the `package.json` file
          # For more information, see https://docs.npmjs.com/cli/ci.html
          - name: Install dependencies
            run: npm

  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
     QWE: 333333333 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell fgfgfgfg
    - name: Send greeting
      run: echo "Hello ${{ inputs.name }}"
           echo "Hello ${QWE+1} "
           echo "Hello $GITHUB_REPOSITORY_OWNER " 
#      if: GITHUB_REPOSITORY_OWNER='qwertyu'
   
   

  grqwerty:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: greet
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: ls
